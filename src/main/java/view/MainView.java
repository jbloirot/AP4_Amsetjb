/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.swing.table.AbstractTableModel;
import model.UserListModel;

/**
 *
 * @author m.perot
 */
public class MainView extends javax.swing.JFrame {

    private PropertyChangeSupport listeners = new PropertyChangeSupport(this);
    private UserListModel userData = new UserListModel();

    public void addPropertyChangeListener(PropertyChangeListener listener) {
        this.listeners.addPropertyChangeListener(listener);
    }

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deleteUser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersList = new javax.swing.JTable();
        modifUser = new javax.swing.JButton();
        addUser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        deleteUser.setText("Supprimer");
        deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserActionPerformed(evt);
            }
        });

        usersList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(usersList);

        modifUser.setText("Modifier");
        modifUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifUserActionPerformed(evt);
            }
        });

        addUser.setText("Ajouter");
        addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(addUser)
                        .addGap(108, 108, 108)
                        .addComponent(modifUser)
                        .addGap(108, 108, 108)
                        .addComponent(deleteUser))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(257, 257, 257))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteUser)
                    .addComponent(modifUser)
                    .addComponent(addUser))
                .addGap(157, 157, 157))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserActionPerformed
        listeners.firePropertyChange("deleteUser", null, null);
    }//GEN-LAST:event_deleteUserActionPerformed

    private void modifUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifUserActionPerformed
        listeners.firePropertyChange("openModifDialog", null, null);
    }//GEN-LAST:event_modifUserActionPerformed

    private void addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserActionPerformed
        listeners.firePropertyChange("ajoutUser", null, null);
    }//GEN-LAST:event_addUserActionPerformed

    public String message(String mess) {
        return mess;
    }

    public int getSelectedId() { // Retourne l'id de l'utilisateur sélectionné (MODIF)
        return (int) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 0);
    }

    public String getSelectedNom() { // Retourne le nom de l'utilisateur sélectionné (MODIF)
        return (String) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 1);
    }

    public String getSelectedPrenom() { // Retourne le prénom de l'utilisateur sélectionné (MODIF)
        return (String) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 2);

    }

    public String getSelectedEmail() { // Retourne le mail de l'utilisateur sélectionné (MODIF)
        return (String) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 3);

    }

    public String getSelectedIdentifiant() { // Retourne l'identifiant (pas l'id) de l'utilisateur sélectionné (MODIF)
        return (String) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 4);

    }

    public String getSelectedPassword() { // Retourne le mot de passe de l'utilisateur sélectionné (MODIF)
        return (String) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 5);

    }

    public void setTableModel(AbstractTableModel tableModel) {
        this.usersList.setModel(tableModel);
        this.usersList.removeColumn(this.usersList.getColumn("ID")); // Cache la colonne ID
        this.usersList.removeColumn(this.usersList.getColumn("Identifiant")); // Cache la colonne Identifiant
        this.usersList.removeColumn(this.usersList.getColumn("Password")); // Cache la colonne Password
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUser;
    private javax.swing.JButton deleteUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifUser;
    private javax.swing.JTable usersList;
    // End of variables declaration//GEN-END:variables
}
